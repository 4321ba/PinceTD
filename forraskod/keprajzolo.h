#ifndef KEPRAJZOLO_H
#define KEPRAJZOLO_H

#include <stdbool.h>
#include <SDL2/SDL.h>
#include "vektor2.h"

// egy csempe 16×16-os, egy karakter a stringRGBA-val 8×8-as
enum {CSEMPEMERET = 16, KARAKTER = 8};

typedef enum Kep {
    WALL_TOP_LEFT, WALL_TOP_MID, WALL_TOP_RIGHT,
    WALL_LEFT, WALL_MID, WALL_RIGHT,
    WALL_FOUNTAIN_TOP, WALL_FOUNTAIN_MID_RED_ANIM, WALL_FOUNTAIN_BASIN_RED_ANIM, WALL_FOUNTAIN_MID_BLUE_ANIM, WALL_FOUNTAIN_BASIN_BLUE_ANIM,
    WALL_HOLE_1, WALL_HOLE_2,
    WALL_BANNER_RED, WALL_BANNER_BLUE, WALL_BANNER_GREEN, WALL_BANNER_YELLOW,
    COLUMN_TOP, COLUMN_MID, COULMN_BASE, WALL_COLUMN_TOP, WALL_COLUMN_MID, WALL_COULMN_BASE,
    WALL_GOO, WALL_GOO_BASE,
    FLOOR_1, FLOOR_2, FLOOR_3, FLOOR_4, FLOOR_5, FLOOR_6, FLOOR_7, FLOOR_8, FLOOR_LADDER,
    FLOOR_SPIKES_ANIM,
    WALL_SIDE_TOP_LEFT, WALL_SIDE_TOP_RIGHT, WALL_SIDE_MID_LEFT, WALL_SIDE_MID_RIGHT, WALL_SIDE_FRONT_LEFT, WALL_SIDE_FRONT_RIGHT,
    WALL_CORNER_TOP_LEFT, WALL_CORNER_TOP_RIGHT, WALL_CORNER_LEFT, WALL_CORNER_RIGHT, WALL_CORNER_BOTTOM_LEFT, WALL_CORNER_BOTTOM_RIGHT, WALL_CORNER_FRONT_LEFT, WALL_CORNER_FRONT_RIGHT,
    WALL_INNER_CORNER_L_TOP_LEFT, WALL_INNER_CORNER_L_TOP_RIGTH, WALL_INNER_CORNER_MID_LEFT, WALL_INNER_CORNER_MID_RIGTH, WALL_INNER_CORNER_T_TOP_LEFT, WALL_INNER_CORNER_T_TOP_RIGTH,
    EDGE, HOLE,
    DOORS_ALL, DOORS_FRAME_LEFT, DOORS_FRAME_TOP, DOORS_FRAME_RIGH, DOORS_LEAF_CLOSED, DOORS_LEAF_OPEN,
    CHEST_EMPTY_OPEN_ANIM, CHEST_FULL_OPEN_ANIM, CHEST_MIMIC_OPEN_ANIM,
    FLASK_BIG_RED, FLASK_BIG_BLUE, FLASK_BIG_GREEN, FLASK_BIG_YELLOW,
    FLASK_RED, FLASK_BLUE, FLASK_GREEN, FLASK_YELLOW,
    SKULL, CRATE,
    COIN_ANIM,
    UI_HEART_FULL, UI_HEART_HALF, UI_HEART_EMPTY,
    WEAPON_KNIFE, WEAPON_RUSTY_SWORD, WEAPON_REGULAR_SWORD, WEAPON_RED_GEM_SWORD, WEAPON_BIG_HAMMER, WEAPON_HAMMER, WEAPON_BATON_WITH_SPIKES, WEAPON_MACE, WEAPON_KATANA, WEAPON_SAW_SWORD, WEAPON_ANIME_SWORD, WEAPON_AXE, WEAPON_MACHETE, WEAPON_CLEAVER, WEAPON_DUEL_SWORD, WEAPON_KNIGHT_SWORD, WEAPON_GOLDEN_SWORD, WEAPON_LAVISH_SWORD, WEAPON_RED_MAGIC_STAFF, WEAPON_GREEN_MAGIC_STAFF, WEAPON_SPEAR, WEAPON_ARROW, WEAPON_BOW,
    TINY_ZOMBIE_IDLE_ANIM, TINY_ZOMBIE_RUN_ANIM, GOBLIN_IDLE_ANIM, GOBLIN_RUN_ANIM, IMP_IDLE_ANIM, IMP_RUN_ANIM, SKELET_IDLE_ANIM, SKELET_RUN_ANIM, MUDDY_IDLE_ANIM, MUDDY_RUN_ANIM, SWAMPY_IDLE_ANIM, SWAMPY_RUN_ANIM, ZOMBIE_IDLE_ANIM, ZOMBIE_RUN_ANIM, ICE_ZOMBIE_IDLE_ANIM, ICE_ZOMBIE_RUN_ANIM, MASKED_ORC_IDLE_ANIM, MASKED_ORC_RUN_ANIM, ORC_WARRIOR_IDLE_ANIM, ORC_WARRIOR_RUN_ANIM, ORC_SHAMAN_IDLE_ANIM, ORC_SHAMAN_RUN_ANIM, NECROMANCER_IDLE_ANIM, NECROMANCER_RUN_ANIM, WOGOL_IDLE_ANIM, WOGOL_RUN_ANIM, CHORT_IDLE_ANIM, CHORT_RUN_ANIM, BIG_ZOMBIE_IDLE_ANIM, BIG_ZOMBIE_RUN_ANIM, OGRE_IDLE_ANIM, OGRE_RUN_ANIM, BIG_DEMON_IDLE_ANIM, BIG_DEMON_RUN_ANIM,
    ELF_F_IDLE_ANIM, ELF_F_RUN_ANIM, ELF_F_HIT_ANIM,
    ELF_M_IDLE_ANIM, ELF_M_RUN_ANIM, ELF_M_HIT_ANIM,
    KNIGHT_F_IDLE_ANIM, KNIGHT_F_RUN_ANIM, KNIGHT_F_HIT_ANIM,
    KNIGHT_M_IDLE_ANIM, KNIGHT_M_RUN_ANIM, KNIGHT_M_HIT_ANIM,
    WIZZARD_F_IDLE_ANIM, WIZZARD_F_RUN_ANIM, WIZZARD_F_HIT_ANIM,
    WIZZARD_M_IDLE_ANIM, WIZZARD_M_RUN_ANIM, WIZZARD_M_HIT_ANIM,
    LIZARD_F_IDLE_ANIM, LIZARD_F_RUN_ANIM, LIZARD_F_HIT_ANIM,
    LIZARD_M_IDLE_ANIM, LIZARD_M_RUN_ANIM, LIZARD_M_HIT_ANIM, 
} Kep;

typedef struct KepInformacio {
    // a leghosszabb név olyan 32 karakter körül van a fájlban
    // tulajdonképpen redundáns, de segíthet a Kép enumerációval való elcsúszás hibamentesítésénél
    char nev[40];
    Vektor2e kezdopont, nagysag;
    int ismetlesszam; // animációhoz, a kijelölt képpel együtt mögötte még ennyi tartozik ide
} KepInformacio;

// beolvassa a képfájlt és a koordinátákat tartalmazó fájlt
void keprajzolo_inicializacio(void);
// kitörli a textúrát
void keprajzolo_destrukcio(void);

// pozicio a képernyő koordinátái, az animáció képkocka pedig 0-tól ismetlesszam-1 -ig terjed
void kep_kirajzol_egesz(Kep kep, Vektor2e pozicio, int animacio_kepkocka);
// szög fokban: 0 az eredeti állapot, +90° az óramutató járásával megegyezően 1/4 teljes fordulat
void kep_kirajzol_lebegopontos(Kep kep, Vektor2d pozicio, int animacio_kepkocka, double szog, bool tukros);

// visszaadja a Képhez tartozó KépInformációt
KepInformacio const *szerez_kepinformacio(Kep k);

// stringRGBA-val kirajzolja a szöveget, poz a bal felső vagy középső felső sarok, attól függően, hogy középre van-e igazítva
void szoveg_kirajzol(char const *szoveg, Vektor2e poz, SDL_Color const *s, bool vizszintesen_kozepre_igazitott);

#endif // KEPRAJZOLO_H
